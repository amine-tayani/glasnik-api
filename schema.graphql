### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  message: String
  token: String
  user: User
}

"""the Community type definition"""
type Community {
  category: String!
  createdAt: DateTime
  deletedAt: DateTime
  id: String!
  messages: [Message!]!
  name: String!
  thumbUrl: String!
  type: CommunityType
  updateAt: DateTime
  users: [User!]!
}

enum CommunityType {
  DUO
  PRIVATE
  PUBLIC
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Message {
  community: Community!
  communityId: String!
  deletedAt: DateTime
  id: String!
  sender: User!
  senderId: String!
  text: String!
  timestamp: DateTime
  updateAt: DateTime
}

type Mutation {
  """mutation for adding a friend"""
  addFriend(friendId: String!): ResponseMessage

  """creating account mutation"""
  createAccount(email: String!, password: String!, username: String!): AuthPayload

  """mutation for creating a new Community"""
  createCommunity(category: String!, name: String!, thumbUrl: Upload, type: CommunityType): Community

  """mutation for creating a new Message"""
  createMessage(communityId: String!, text: String!): Message

  """forgot password mutation"""
  forgotPassword(email: String!): ResponseMessage

  """mutation for joining a Community"""
  joinCommunity(name: String!): ResponseMessage

  """login to account mutation"""
  loginToAccount(email: String!, password: String!): AuthPayload

  """mutation for removing a friend from a list"""
  removeFriend(friendId: String!): ResponseMessage

  """reset password mutation"""
  resetPassword(confirmPassword: String!, password: String!, resetToken: String!): ResetResponse

  """Mutation for file uploading (avatar) """
  uploadAvatar(avatar: Upload): ResponseMessage
}

type Query {
  """get a informations about all communities """
  communities: [Community]

  """get a informations about a single community by id """
  community(communityId: String!): Community

  """Get single message"""
  getMessage(id: String!): Message

  """get a informations about all messages in a community """
  getMessages(communityId: String!): [Message]
  me: User
  users: [User]
}

type ResetResponse {
  message: String
  token: String
}

type ResponseMessage {
  message: String
}

enum Role {
  BOT
  MOD
  USER
}

enum SortOrder {
  asc
  desc
}

type Subscription {
  newUserLoggedIn: User

  """subscription that listen for new messages"""
  onMessage: Message
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  communities: [Community]
  communityId: String
  createdAt: DateTime
  email: String!
  friendOf: [User]
  friends: [User]
  id: String!
  isActive: Boolean
  isBlocked: Boolean
  messages: [Message]
  password: String!
  photoUrl: String
  resetToken: String
  resetTokenExpiry: DateTime
  role: Role
  updateAt: DateTime
  username: String!
}
